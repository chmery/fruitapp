var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},a={},s={},n=e.parcelRequiref3ff;null==n&&((n=function(e){if(e in a)return a[e].exports;if(e in s){var n=s[e];delete s[e];var r={id:e,exports:{}};return a[e]=r,n.call(r.exports,r,r.exports),r.exports}var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}).register=function(e,a){s[e]=a},e.parcelRequiref3ff=n);const r=(e,a,s)=>[...e].sort(((e,n)=>"ascending"===s?e[2][a]-n[2][a]:n[2][a]-e[2][a])),t=(e,a)=>{a.forEach((a=>{const s=a[1];e.insertAdjacentHTML("beforeend",s)}))};var o=n("aPn72"),d=n("susCi"),i=n("5lKFX"),l=n("kDCnT"),c=n("g3n0O");const u=document.querySelector(".search__show-all"),f=[],p=setInterval((()=>{const e=d.allFruits.querySelector(".loader");(0,o.isDataAssigned)()&&(clearInterval(p),m(),e&&d.allFruits.removeChild(e)),(0,o.isDataAssigned)()||e||(0,l.renderSpinner)(d.allFruits)}),500),m=()=>{g(),f.forEach((e=>{const a=e[1];d.allFruits.insertAdjacentHTML("beforeend",a)}))},g=()=>{f.length=0,o.fruits.forEach(((e,a)=>{const s=e.nutritions,n=a,r=`\n        <div class="search__result item">\n            <div class="search__result-image" style="background-image: url(${e.image})"></div>\n            <div class="search__result-text">\n                <p class="search__result-name">${e.name}</p>\n                <p class="search__result-kcal bright">${e.nutritions.calories} kcal per 100g</p>\n            </div>\n            <div class="search__result-icons">\n                <i class="fa-solid fa-plus fa-lg" data-fruit-id="${n}" ${(0,l.setIconColorOnRender)(c.addedToCalculator,n)}></i>\n                <i class="fa-regular fa-heart fa-lg" data-fruit-id="${n}" ${(0,l.setIconColorOnRender)(i.addedToFavourites,n)}></i>\n            </div>\n        </div>\n        `;f.push([n,r,s])}))};u.addEventListener("click",(()=>m()));i=n("5lKFX"),d=n("susCi"),l=n("kDCnT");const v=document.querySelectorAll("p[class$='sort']"),w=e=>e.removeChild(e.querySelector(".dropdown"));v.forEach((e=>{e.addEventListener("click",(a=>{const s=document.querySelector(".dropdown"),n=e.closest("header");a.target.closest("p[class$='sort']")===e&&s?w(n):(e=>{e.insertAdjacentHTML("beforeend",'\n    <div class="dropdown">\n        <p class="dropdown-item" data-macronutrient="calories" data-order="ascending">\n            Calories <i class="fa-solid fa-angle-up"></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="calories" data-order="descending">\n            Calories <i class="fa-solid fa-angle-down"></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="protein" data-order="ascending">\n            Proteins <i class="fa-solid fa-angle-up"></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="protein" data-order="descending">\n            Proteins <i class="fa-solid fa-angle-down"></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="fat" data-order="ascending">\n            Fats <i class="fa-solid fa-angle-up"></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="fat" data-order="descending">\n            Fats <i class="fa-solid fa-angle-down" ></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="carbohydrates" data-order="ascending">\n            Carbs <i class="fa-solid fa-angle-up"></i>\n        </p>\n        <p class="dropdown-item" data-macronutrient="carbohydrates" data-order="descending">\n            Carbs <i class="fa-solid fa-angle-down"></i>\n        </p>\n    </div> \n    ')})(n)}))})),window.addEventListener("click",(e=>{const a=document.querySelector(".dropdown");if(!a)return;const s=e.target,n=a.closest("header"),o=Array.from(document.querySelectorAll("[class*='dropdown']")),c=()=>o.some((e=>e===s));c&&(e=>{const a=e.closest(".dropdown-item"),s=a?.dataset.macronutrient,n=a?.dataset.order;if(!s||!n)return;const o=e.closest("dialog"),c=o.className.includes("all-fruits"),u=o.className.includes("favourites");if(c){g();const e=r(f,s,n);(0,l.clearList)(d.allFruits),t(d.allFruits,e)}if(u&&(0,i.favouritesAmount)()>1){(0,i.updatePlusIconsColor)();const e=r(i.favouriteItemsMarkup,s,n);(0,l.clearList)(d.favourites),t(d.favourites,e)}})(s),(!c()&&!Array.from(v).some((e=>e===s.closest("p[class$='sort']")))||c())&&w(n)}));